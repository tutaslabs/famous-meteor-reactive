Meteor.startup  ->

# our entire app is defined as a 'class'
# it will get instantiated into the Scene which requires a 'node' object thus the reason
# our app class inherits from the node class

  class App.app extends Famous.Node

    constructor: (@options) ->
      super @options
      @build()

    build: ->
      @makeApp this

    makeApp: (node) ->
# create box1
      n1 = node.addChild().setSizeMode('absolute', 'absolute').setAbsoluteSize(350, 100)
      n1.setAlign 0.5,0.4,0
      n1.setMountPoint 0.5,0.5,0
      n1.addUIEvent 'click'
      n = new Famous.DOMElement n1,
        properties:
          textAlign: 'center'
          lineHeight: '100px'
          fontSize: 'x-large'
          cursor: 'pointer'
          borderRadius: '20px'
          border: 'solid black 1px'
        classes: ['box1']
        content: ' '
# give the element an id so we can find it later
      n.setId 'b1'

# render box1 content from a template using reactive variables
      App.renderTemplate Template.box1,n1

# create box2
      n2 = node.addChild().setSizeMode('absolute', 'absolute').setAbsoluteSize(350, 100)
      n2.setAlign 0.5,0.7,0
      n2.setMountPoint 0.5,0.5,0
      n2.addUIEvent 'click'
      new Famous.DOMElement n2,
        properties:
          textAlign: 'center'
          lineHeight: '100px'
          fontSize: 'x-large'
          cursor: 'pointer'
          borderRadius: '20px'
          border: 'solid black 1px'
        classes: ['box2']
# we force famous to create a DOMElement with content so the 'div' gets created - meteor needs this
# there are other ways to do this - but this is quick and dirty and harmless!
        content: ' '


# render box2 content from a template using reactive variables
      App.renderTemplate Template.box2,n2

# create our header text box
      n3 = node.addChild()
      size = new Famous.Size(n3)
# relative,absolute,absolute
      size.setMode(0,1,1).setProportional(1.0,1.0,1.0).setAbsolute(500,200)
      n3.setAlign 0.5,0.2,0
      n3.setMountPoint 0.5,0.5,0

      new Famous.DOMElement n3,
        properties:
          textAlign: 'center'
          lineHeight: '25px'
          fontSize: 'x-large'
        content: ' '
# render our header content
      App.renderTemplate Template.head,n3

# have our main node (this) override the onReceive function
# this will get the DOM events generated by mouse clicks on our boxes

    onReceive: (event,payload) ->
      if event is 'click'
# _components[0] points to the DOMElement
# node.getId() returns a famous path of the element clicked. i.e. body/0/0
# this is fairly useless to check because it could change as the scene graph gets more elements added
# so i just assign the DOMElement an id that will never change and check for it
        if payload.node._components[0]._attributes.id  is 'b1' #box 1
          Session.set('count',Session.get('count')+1)  #increment count
        else
          Session.set('count',Session.get('count')-1)  #decrement count





